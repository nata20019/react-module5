{"version":3,"file":"static/js/599.73d941f8.chunk.js","mappings":"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","sources":["api/coffee-api.js","components/CoffeeList.jsx","components/Loader.jsx","pages/IcedCoffe.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.sampleapis.com/coffee';\n\nexport const fetchHotCoffee = async () => {\n  try {\n    const response = await axios.get(`${BASE_URL}/hot`);\n    console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching hot coffee:', error);\n    throw error;\n  }\n};\n\nexport const fetchIcedCoffee = async () => {\n  try {\n    const response = await axios.get(`${BASE_URL}/iced`);\n    console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching hot coffee:', error);\n    throw error;\n  }\n};\n\nexport const getCoffeeDetails = async (type, coffeeId) => {\n  try {\n    let response;\n    if (type === 'hot') {\n      response = await axios.get(`${BASE_URL}/coffee/hot/${coffeeId}`);\n      console.log(response.data);\n    } else if (type === 'iced') {\n      response = await axios.get(`${BASE_URL}/coffee/iced/${coffeeId}`);\n      console.log(response.data);\n    } else {\n      throw new Error('Invalid coffee type. Must be \"hot\" or \"iced\".');\n    }\n    const coffeeDetails = response.data.find(\n      coffee => coffee.id === Number(coffeeId)\n    );\n    return coffeeDetails;\n  } catch (error) {\n    console.error(\n      `Error fetching coffee details for ${type} ID ${coffeeId}:`,\n      error\n    );\n    throw error;\n  }\n};\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst CoffeeList = ({ coffees, type }) => {\n  const location = useLocation();\n\n  if (!coffees || coffees.length === 0) {\n    return <p>No coffee recipes to display.</p>;\n  }\n  return (\n    <ul className=\"coffee-list\">\n      {coffees.map(coffee => (\n        <li key={coffee.id} className=\"coffee-list-item\">\n          <Link to={`/${type}/${coffee.id}`} state={{ from: location }}>\n            <img\n              src={\n                coffee.image ||\n                'https://via.placeholder.com/100x100.png?text=No+Image'\n              }\n              alt={coffee.title}\n              width=\"100\"\n              className=\"coffee-image\"\n            />\n            <p className=\"coffee-title\">{coffee.title}</p>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nCoffeeList.propTypes = {\n  coffees: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      image: PropTypes.string,\n    })\n  ).isRequired,\n  type: PropTypes.oneOf(['hot', 'iced']),\n};\n\nexport default CoffeeList;\n\n// import { Link, useLocation } from 'react-router-dom';\n// import PropTypes from 'prop-types';\n\n// const MoviesList = ({ movies }) => {\n//   const location = useLocation();\n\n//   return (\n//     <div className=\"container\">\n//       {movies.length > 0 && (\n//         <ul>\n//           {movies.map(movie => (\n//             <li key={movie.id}>\n//               {/* <Link to={`/movies/${movie.id}`} state={{ from: location }}> */}\n//               <Link to={`/movies/${movie.id}`} state={location}>\n//                 {movie.title || movie.name}\n//               </Link>\n//             </li>\n//           ))}\n//         </ul>\n//       )}\n//     </div>\n//   );\n// };\n\n// MoviesList.propTypes = {\n//   movies: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.number.isRequired,\n//       title: PropTypes.string,\n//       name: PropTypes.string,\n//     })\n//   ).isRequired,\n// };\n\n// export default MoviesList;\n","import React from 'react';\nimport { RotatingLines } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100px',\n      }}\n    >\n      <RotatingLines\n        visible={true}\n        height=\"96\"\n        width=\"96\"\n        color=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        ariaLabel=\"rotating-lines-loading\"\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","import React, { useState, useEffect } from 'react';\nimport { fetchIcedCoffee } from '../api/coffee-api';\nimport Loader from '../components/Loader';\nimport CoffeeList from '../components/CoffeeList';\nimport './pages.css';\n\nconst IcedCoffee = () => {\n  const [coffeeList, setCoffeeList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getIcedCoffee = async () => {\n      setIsLoading(true);\n      setError(null);\n      try {\n        const icedCoffee = await fetchIcedCoffee();\n        setCoffeeList(icedCoffee);\n      } catch (err) {\n        setError(err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getIcedCoffee();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h1>Iced Coffee Recipes</h1>\n      {isLoading && <Loader />}\n      {error && (\n        <p className=\"error-message\">\n          Oops! Something went wrong: {error.message}\n        </p>\n      )}\n      {!isLoading && !error && coffeeList.length > 0 && (\n        <CoffeeList coffees={coffeeList} type=\"iced\" />\n      )}\n      {!isLoading && !error && coffeeList.length === 0 && (\n        <p>No iced coffee recipes available.</p>\n      )}\n    </div>\n  );\n};\n\nexport default IcedCoffee;\n\n// import React, { useState, useEffect } from 'react';\n// import { useSearchParams } from 'react-router-dom';\n// import { searchMovies } from '../api/themoviedb-api';\n// import Loader from '../components/Loader';\n// import MoviesList from '../components/MoviesList';\n// import './pages.css';\n\n// const Movies = () => {\n//   const [searchParams, setSearchParams] = useSearchParams();\n//   const query = searchParams.get('query') || '';\n\n//   const [movies, setMovies] = useState([]);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(null);\n//   const [inputValue, setInputValue] = useState(query);\n\n//   useEffect(() => {\n//     if (!query) {\n//       setMovies([]);\n//       return;\n//     }\n\n//     const fetchMovies = async () => {\n//       setIsLoading(true);\n//       setError(null);\n//       try {\n//         const data = await searchMovies(query);\n//         if (data.results.length === 0) {\n//           alert(`No movies found for \"${query}\".`);\n//         }\n//         setMovies(data.results);\n//       } catch (err) {\n//         setError(err);\n//       } finally {\n//         setIsLoading(false);\n//       }\n//     };\n\n//     fetchMovies();\n//   }, [query]);\n//   const handleSearch = e => {\n//     e.preventDefault();\n//     const newQuery = inputValue.trim();\n//     if (newQuery === '') {\n//       alert('Please enter a search query.');\n//       return;\n//     }\n//     setSearchParams({ query: newQuery });\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h1>Search Movies</h1>\n//       <form onSubmit={handleSearch} className=\"search-form\">\n//         <input\n//           type=\"text\"\n//           value={inputValue}\n//           onChange={e => setInputValue(e.target.value)}\n//           placeholder=\"Search movies...\"\n//         />\n//         <button type=\"submit\">Search</button>\n//       </form>\n\n//       {isLoading && <Loader />}\n//       {error && (\n//         <p className=\"error-message\">\n//           Oops! Something went wrong: {error.message}\n//         </p>\n//       )}\n//       {!isLoading && !error && movies.length > 0 && (\n//         <MoviesList movies={movies} />\n//       )}\n//       {!isLoading && !error && movies.length === 0 && query && (\n//         <p>No movies found for \"{query}\".</p>\n//       )}\n\n//     </div>\n//   );\n// };\n\n// export default Movies;\n"],"names":["BASE_URL","fetchHotCoffee","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","sent","console","log","data","abrupt","t0","error","stop","apply","arguments","fetchIcedCoffee","_ref2","_callee2","_context2","getCoffeeDetails","_ref3","_callee3","type","coffeeId","coffeeDetails","_context3","Error","find","coffee","id","Number","_x","_x2","coffees","location","useLocation","length","_jsx","className","children","map","_jsxs","Link","to","state","from","src","image","alt","title","width","style","display","justifyContent","alignItems","height","RotatingLines","visible","color","strokeWidth","animationDuration","ariaLabel","_useState","useState","_useState2","_slicedToArray","coffeeList","setCoffeeList","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","setError","useEffect","getIcedCoffee","icedCoffee","finish","Loader","message","CoffeeList"],"sourceRoot":""}